Exercise 1

1.指定不同的内存区域和数据类型，它们分别对应于程序的不同部分。这些指令帮助编译器和汇编器正确地组织和分配内存。

  .data 指令用于定义数据段的开始。在数据段中存储的是程序中用到的静态数据，如变量、常量等。
  在 .data 段中定义的变量在程序运行时是静态存储的，这意味着它们的值在程序运行期间不会改变（除非程序显式修改它们）。这个段的内存地址在程序编译时确定。

  .word 指令用于分配一个或多个字（通常是 4 字节）的内存，并初始化这些内存位置的值。
  .word 用于定义整数数据类型，通常用于声明一个整型变量或常量。

  .text 指令用于定义代码段的开始。代码段是存储程序实际执行指令的内存区域。
  在 .text 段中编写的代码是程序的执行部分，包括各种指令和程序逻辑。这个段的内存地址在程序编译时确定。

  四个内存区的概念
  在计算机程序的内存布局中，通常会有以下四个主要内存区域：

  代码段（.text segment）：存储程序的执行指令。
  数据段（.data segment）：存储程序中静态分配的数据和变量。
  堆（Heap）：动态分配的内存区域，用于运行时分配的内存块。
  栈（Stack）：用于存储函数调用的局部变量和执行信息。

2.输出了34。代表第n个斐波那契数
3.0x10000010
4.233


Exercise 2
1.t0
2.s0
3.s1-source s2-dest
4.loop:
    slli s3, t0, 2
    add t1, s1, s3
    lw t2, 0(t1)
    beq t2, x0, exit
    add a0, x0, t2
    addi sp, sp, -8
    sw t0, 0(sp)
    sw t2, 4(sp)
    jal fun
    lw t0, 0(sp)
    lw t2, 4(sp)
    addi sp, sp, 8
    add t2, x0, a0
    add t3, s2, s3
    sw t2, 0(t3)
    add s0, s0, t2
    addi t0, t0, 1
    jal x0, loop
5.访存